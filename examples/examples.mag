// load period-suite
Attach("suite.mag");


function randomHomPoly(ring,deg : coefSize:=10, sparse:=0)
    mons:=MonomialsOfDegree(ring,deg);
    if sparse gt 0 then
        mons:=IndexedSetToSet(MonomialsOfDegree(ring,deg));
        mons:=SetToSequence(RandomSubset(mons,sparse));
    end if;
    repeat
        p:=&+[Random([-coefSize..coefSize])*mon : mon in mons];
    until not p eq 0;
    return p;
end function;

function smoothPolynomial(ring,deg : coefSize:=10, sparse:=5, verbose:=false)
    attemptNo:=0;
    repeat
        f:=randomHomPoly(ring,deg : sparse:=sparse, coefSize:=coefSize);
        if verbose then
            attemptNo+:=1;
            print "Attempt number:",attemptNo;
            print "f=",f;
        end if;
    until not IsSingular(Scheme(Proj(ring),f));
    return f;
end function;


// Generate a smooth quartic
P<x,y,z,w> := PolynomialRing(Rationals(),4);
f:=smoothPolynomial(P,4 : sparse:=4);

// Compute a path of deformation, compatible cohomology bases at each step, find Picard-Fuchs equations, determine initial conditions, write to a Sage readable file (current.sage)
time ph:=PeriodHomotopy([f]);
// Beware of the extra square brackets!

// TIP: Do *not* settle for the first computation. Kill the computation after a few seconds and try again. You may find a superior path of deformation that way.

//////////////////
// Integration //
//////////////////

// Now open sage from within this folder:
// sage --notebook=jupyter integrator.ipynb
// hit enter on the first block for the periods
// hit enter on the second block for the picard rank

///////////////////////
// Important options //
///////////////////////

// By default, for each deformation step, a straight path of integration is used! 
// If you want to find another path use:
// time ph:=PeriodHomotopy([f] : pathfinder:=true);

// A deformation path is automatically computed with some basic heuristics and with randomization. It is recommended that you try a function several times to make sure you are not stuck in a highly sub-optimal path. (This can make a huge difference!)

// If you find a good path of deformation, make sure to save it: 
// favoriteDeformation:=pb[2];

// Then you can re-use it like this:
// PeriodHomotopy(favoriteDeformation);

////////////
// OUTPUT //
////////////

// The following is for information only, the user in general need not use them

// pb[1] is the path of deformation
// pb[2] is the transition matricies expressing a new cohomology basis (and the derivatives) in terms of an old cohomology basis
// pb[3] is the initial values for the very first deformation path
// pb[4] is the set of ODEs for each basis element of cohomology for each deformation path



//////////////
// Examples //
//////////////



// The timings refer to optimal deformation paths that were found after several attemps, if yours is taking longer kill the computation and try again to find a better path

// schur
f:=x*(x^3-y^3)-z*(z^3-w^3);

// 64 lines
f:=-8*x^4 - 7*x*z^3 - y^4 + 5*y*w^3;

// 0.6s for ODEs + 40s for integration
f:=-x^3*w + 8*x*y^2*w - y^4 + z^4 + 8*w^4;
def:=[
x^4 - y^4 + z^4 + 8*w^4,
x^4 - x^3*w - y^4 + z^4 + 8*w^4,
-x^3*w - y^4 + z^4 + 8*w^4,
-x^3*w + 8*x*y^2*w - y^4 + z^4 + 8*w^4
];

// 0.5s ODE + 20s integrate
f:=-3*x^4 + 5*x*y*z*w - 10*y^4 + 5*z^4 - 7*z*w^3;
// a good path
deformation:=[
-3*x^4 - 10*y^4 + 5*z^4 + w^4,
-3*x^4 - 10*y^4 + 5*z^4 - 7*z*w^3 + w^4,
-3*x^4 - 10*y^4 + 5*z^4 - 7*z*w^3,
-3*x^4 + 5*x*y*z*w - 10*y^4 + 5*z^4 - 7*z*w^3
];

// 0.5s + 30s
f:=10*x^3*w + 10*x*y^2*w + 8*x*w^3 - 2*y^4 + 7*z^4;
// a good path
deformation:=[
x^4 - 2*y^4 + 7*z^4 + w^4,
x^4 + 10*x^3*w - 2*y^4 + 7*z^4 + w^4,
10*x^3*w - 2*y^4 + 7*z^4 + w^4,
10*x^3*w + 8*x*w^3 - 2*y^4 + 7*z^4 + w^4,
10*x^3*w + 8*x*w^3 - 2*y^4 + 7*z^4,
10*x^3*w + 10*x*y^2*w + 8*x*w^3 - 2*y^4 + 7*z^4
];

// Hard one: illustrates the use of saving your paths! 
f:=x^4 - 5*x*y^3 + 3*y^4 - 5*y*z^3 - 4*z*w^3;
// An *extremely* rare fast path (0.5s + 24s)
def:=[
x^4 + 3*y^4 + z^4 + w^4,
x^4 + 3*y^4 + z^4 - 4*z*w^3 + w^4,
x^4 + 3*y^4 + z^4 - 4*z*w^3,
x^4 + 3*y^4 - 5*y*z^3 + z^4 - 4*z*w^3,
x^4 + 3*y^4 - 5*y*z^3 - 4*z*w^3,
x^4 - 5*x*y^3 + 3*y^4 - 5*y*z^3 - 4*z*w^3
];

// 0.5 s + 31 s
def:=[
-4*x^4 + y^4 + z^4 + 6*w^4,
-4*x^4 + y^4 + z^4 + 6*z^2*w^2 + 6*w^4,
-4*x^4 + y^4 + z^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + y^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + 7*x*y^3 + y^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + 7*x*y^3 + 2*z^3*w + 6*z^2*w^2 + 6*w^4
];

// 15.700s + ??
// straight path takes ~100 seconds giving an ODE of order degree (8,~130)
// the following deformation gives ODEs with degrees less than 17
def:=[
x^4 + y^4 + z^4 + 7*w^4,
x^4 - 4*x^3*y + y^4 + z^4 + 7*w^4,
-4*x^3*y + y^4 + z^4 + 7*w^4,
-4*x^3*y + y^4 + 2*y^3*z + z^4 + 7*w^4,
-4*x^3*y + 2*y^3*z + z^4 + 7*w^4,
-4*x^3*y - 9*x*z^3 + 2*y^3*z + z^4 + 7*w^4,
-4*x^3*y - 9*x*z^3 + 2*y^3*z + 7*w^4,
-4*x^3*y - 9*x*z^3 + 2*y^3*z + 5*y^2*z^2 + 7*w^4
];

// Degree 5 example 

// 3.3 s + 95s
f:=9*x^5 - 2*x*y^4 - y^3*z^2 - 5*y*z^4 - 7*w^5;
//
def:=[
9*x^5 + y^5 + z^5 - 7*w^5,
9*x^5 + y^5 - 5*y*z^4 + z^5 - 7*w^5,
9*x^5 + y^5 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 + y^5 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 - y^3*z^2 - 5*y*z^4 - 7*w^5
];

// Degree 5 example from Matthias Schuett
//  "Picard numbers of quintic surfaces"
// (end of page 20, beginning of Section 6)
// target surface is singular
// it has picard rank 13
// PF: 456 s 
// integrate: 680 s (e-100 asked, e-67 delivered)
def:=[
x^5 + y^5 + z^5 + w^5,
x^5 + y^5 + z^5 + z^4*w + w^5,
x^5 + y^5 + z^4*w + w^5,
x^5 + x*z*w^3 + y^5 + z^4*w + w^5,
x^5 + x*z*w^3 + y^5 + z^4*w
];

//asphalt suggested this
def2:=[
x^5 + y^5 + z^5 + w^5,
x^5 + x*z*w^3 + y^5 + z^5 + w^5,
x^5 + x*z*w^3 + y^5 + z^4*w
];


// This example presently does not finish computing within an hour.
// Curve of high genus
P<x,y,z>:=PolynomialRing(Rationals(),3);
u:=20;
f:=x^(3*u)+y^(3*u)+z^(3*u)+x^u*y^u*z^u;
time ph:=PeriodHomotopy([f]:precision:=1);
