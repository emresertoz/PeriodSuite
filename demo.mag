// a simple example
SetViMode(true);
Attach("suite.mag");
R<x,y,z,w>:=PolynomialRing(Rationals(),4);
//f:=5*x^4 - 4*x^2*z*w + 8*y^4 - 5*z^4 + 4*z*w^3;
f:=3*x^3*z - 2*x^2*y^2 + x*z^3 - 8*y^4 - 8*w^4;
// finding the ODEs for the periods
time X:=PeriodHomotopy(f);
// time X:=PeriodHomotopy(f : bound_pole_order:=false);

// after the ODEs have been integrated, we can compute the Hodge lattice
X:=HodgeLattice(X);
X`lat; 
X`pol;

_:=P1InK3Lattice(X`lat,X`pol);













// the following are not available in period-suite
LinesInK3Lattice(X`lat,X`pol);
_,_,G1:=LinesInK3Lattice(X`lat,X`pol);
CountLines(f);
G2:=IncidenceOfLines(f); G2;




/// a cubic fourfold
P5<[X]>:=PolynomialRing(Rationals(),6);
def:=[
6*X[1]^3 + 4*X[2]^3 + 4*X[3]^3 + 3*X[4]^3 + 4*X[5]^3 + 9*X[6]^3,
6*X[1]^3 + 4*X[2]^3 + 2*X[2]*X[3]^2 + 4*X[3]^3 + 3*X[4]^3 + 4*X[5]^3 +
    9*X[6]^3,
6*X[1]^3 + 10*X[1]*X[3]*X[5] + 4*X[2]^3 + 2*X[2]*X[3]^2 + 4*X[3]^3 +
    3*X[4]^3 + 4*X[5]^3 + 9*X[6]^3,
6*X[1]^3 + 10*X[1]*X[3]*X[5] + 9*X[1]*X[3]*X[6] + 4*X[2]^3 + 2*X[2]*X[3]^2 +
    4*X[3]^3 + 3*X[4]^3 + 4*X[5]^3 + 9*X[6]^3
];
X:=PeriodHomotopy(def);
X:=HodgeLattice(X);




// generating a smooth quartic surface
f:=smoothHypersurface(P,4); f;

// schur, Picard rank 20
f:=x*(x^3-y^3)-z*(z^3-w^3);
X:=PeriodHomotopy([f]:straight:=true);

// You can also use the evaluation-interpolation method
// implemented by Pierre Lairez to compute the ODEs
X:=PeriodHomotopy([f]:lairez:=true);

//////////////////
// a threefold //
////////////////
P4<[u]>:=PolynomialRing(Rationals(),5);
f:=smoothHypersurface(P4,3);
ph:=PeriodHomotopy([f]);

/////////////////////
// cubic fourfold  //
////////////////////
P5<[X]>:=PolynomialRing(Rationals(),6);
//f:=smoothHypersurface(P5,3:sparse:=7);
// completely random, sparseish
//f:=3*x[1]^3+7*x[2]^2*x[3]-10*x[2]*x[4]^2+7*x[3]^2*x[4]-3*x[5]^3-5*x[5]*x[6]^2;

pow:=[ P5.i^3 : i in [1..Ngens(P5)]];
mons:=[m : m in  MonomialsOfDegree(P5,3) | Index(pow,m) eq 0];
repeat 
  rndm:=[mons[Random(1,#mons)] : i in [1..3]] cat pow;
  f:=&+[ Random(1,10) * m : m in rndm] ;
until isSmooth(f); // startup function

X:=PeriodHomotopy([f]);

X:=HodgeLattice(X);



/// other examples

// working example
def:=[
u[1]^3 + u[2]^3 + u[3]^3 + u[4]^3 + u[5]^3,
u[1]^3 + u[2]^3 + u[3]^3 + u[4]^3 + 5*u[4]^2*u[5] + u[5]^3,
u[1]^3 + u[2]^3 + u[3]^3 + 5*u[4]^2*u[5] + u[5]^3,
u[1]^3 - 4*u[1]^2*u[4] + u[2]^3 + u[3]^3 + 5*u[4]^2*u[5] + u[5]^3,
-4*u[1]^2*u[4] + u[2]^3 + u[3]^3 + 5*u[4]^2*u[5] + u[5]^3,
-4*u[1]^2*u[4] - 2*u[1]*u[3]^2 + u[2]^3 + u[3]^3 + 5*u[4]^2*u[5] + u[5]^3,
-4*u[1]^2*u[4] - 2*u[1]*u[3]^2 + u[2]^3 + 5*u[4]^2*u[5] + u[5]^3,
-4*u[1]^2*u[4] - 2*u[1]*u[3]^2 + u[2]^3 + 2*u[3]*u[5]^2 + 5*u[4]^2*u[5] +
    u[5]^3,
-4*u[1]^2*u[4] - 2*u[1]*u[3]^2 + u[2]^3 + 2*u[3]*u[5]^2 + 5*u[4]^2*u[5]
];


// 0.5s ODE + 20s integrate
f:=-3*x^4 + 5*x*y*z*w - 10*y^4 + 5*z^4 - 7*z*w^3;
// a good path
deformation:=[
-3*x^4 - 10*y^4 + 5*z^4 + w^4,
-3*x^4 - 10*y^4 + 5*z^4 - 7*z*w^3 + w^4,
-3*x^4 - 10*y^4 + 5*z^4 - 7*z*w^3,
-3*x^4 + 5*x*y*z*w - 10*y^4 + 5*z^4 - 7*z*w^3
];





// 0.5s + 30s
f:=10*x^3*w + 10*x*y^2*w + 8*x*w^3 - 2*y^4 + 7*z^4;
// a good path
deformation:=[
x^4 - 2*y^4 + 7*z^4 + w^4,
x^4 + 10*x^3*w - 2*y^4 + 7*z^4 + w^4,
10*x^3*w - 2*y^4 + 7*z^4 + w^4,
10*x^3*w + 8*x*w^3 - 2*y^4 + 7*z^4 + w^4,
10*x^3*w + 8*x*w^3 - 2*y^4 + 7*z^4,
10*x^3*w + 10*x*y^2*w + 8*x*w^3 - 2*y^4 + 7*z^4
];


// 0.5 s + 31 s
// pic rk 18
def:=[
-4*x^4 + y^4 + z^4 + 6*w^4,
-4*x^4 + y^4 + z^4 + 6*z^2*w^2 + 6*w^4,
-4*x^4 + y^4 + z^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + y^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + 7*x*y^3 + y^4 + 2*z^3*w + 6*z^2*w^2 + 6*w^4,
-4*x^4 + 7*x*y^3 + 2*z^3*w + 6*z^2*w^2 + 6*w^4
];



// 3s for ODEs + 40s for integration
// hard to decide
f:=-x^3*w + 8*x*y^2*w - y^4 + z^4 + 8*w^4;


// Degree 5 example 

// 3.3 s + 95s
f:=9*x^5 - 2*x*y^4 - y^3*z^2 - 5*y*z^4 - 7*w^5;
//
def:=[
9*x^5 + y^5 + z^5 - 7*w^5,
9*x^5 + y^5 - 5*y*z^4 + z^5 - 7*w^5,
9*x^5 + y^5 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 + y^5 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 - 5*y*z^4 - 7*w^5,
9*x^5 - 2*x*y^4 - y^3*z^2 - 5*y*z^4 - 7*w^5
];



// typically hard, but the following path is good
// rank 14
// lines generate this lattice
f:= -8*x^3*z - 8*x*y*z^2 + 9*y^3*w + 9*z^4 + w^4;
def:=[
x^4 + y^4 + 9*z^4 + w^4,
x^4 + y^4 + 9*y^3*w + 9*z^4 + w^4,
x^4 + 9*y^3*w + 9*z^4 + w^4,
x^4 - 8*x^3*z + 9*y^3*w + 9*z^4 + w^4,
-8*x^3*z + 9*y^3*w + 9*z^4 + w^4,
-8*x^3*z - 8*x*y*z^2 + 9*y^3*w + 9*z^4 + w^4
];




pow:=[ R.i^3 : i in [1..Ngens(R)]];
mons:=[m : m in  MonomialsOfDegree(R,3) | Index(pow,m) eq 0];
repeat 
  rndm:=[mons[Random(1,#mons)] : i in [1..3]] cat pow;
  f:=&+[ Random(1,10) * m : m in rndm] ;
until isSmooth(f); // startup function
